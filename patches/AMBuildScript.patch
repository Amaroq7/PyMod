--- AMBuildScript	2020-09-10 01:36:16.602652000 +0200
+++ AMBuildScript-custom	2020-10-23 23:44:32.293952775 +0200
@@ -97,8 +97,10 @@
         '-Wno-overloaded-virtual',
       ]
 
-      if have_gcc and cxx.target.arch in ['x86', 'x86_64']:
-        cxx.cflags += ['-mfpmath=sse']
+      if have_gcc:
+        if cxx.target.arch in ['x86', 'x86_64']:
+          cxx.cflags += ['-mfpmath=sse']
+        cxx.cxxflags += ['-Wformat-truncation=0']
 
       cxx.postlink += ['-lm']
 
@@ -115,10 +117,16 @@
         cxx.defines += ['__linux__']
     elif cxx.like('msvc'):
       if builder.options.debug == '1':
-        cxx.cflags += ['/MTd']
+        if getattr(builder.options, 'dynamic', False):
+          cxx.cflags += ['/MDd']
+        else:
+          cxx.cflags += ['/MTd']
         cxx.linkflags += ['/NODEFAULTLIB:libcmt']
       else:
-        cxx.cflags += ['/MT']
+        if getattr(builder.options, 'dynamic', False):
+          cxx.cflags += ['/MD']
+        else:
+          cxx.cflags += ['/MT']
       cxx.defines += [
         '_CRT_SECURE_NO_DEPRECATE',
         '_CRT_SECURE_NO_WARNINGS',
@@ -183,6 +191,19 @@
     # Platform-specifics
     if not cxx.like('emscripten'):
       if cxx.target.platform == 'linux':
+        if have_clang and getattr(builder.options, 'dynamic', False):
+          cxx.linkflags.remove('-lstdc++')
+          cxx.cxxflags += ['-stdlib=libc++']
+          cxx.linkflags += ['-fuse-ld=<LLD>', '--rtlib=compiler-rt', '-Wl,--as-needed']
+          cxx.postlink += ['-L<LLVM_LIBS_DIR>', '-lc++', '-lc++abi', '-lunwind']
+        elif have_clang:
+          cxx.linkflags.remove('-lstdc++')
+          cxx.cxxflags += ['-stdlib=libc++']
+          cxx.linkflags += ['-fuse-ld=<LLD>', '--rtlib=compiler-rt', '-Wl,--as-needed']
+          cxx.postlink += ['-L<LLVM_LIBS_DIR>', '-l:libc++.a', '-l:libc++abi.a', '-l:libunwind.a']
+        elif have_gcc and not getattr(builder.options, 'dynamic', False):
+          cxx.linkflags.remove('-lstdc++')
+          cxx.linkflags += ['-static-libgcc', '-static-libstdc++']
         cxx.postlink += ['-lpthread', '-lrt']
       elif cxx.target.platform == 'mac':
         cxx.linkflags.remove('-lstdc++')
